name: Release

on:
  workflow_call:
    inputs:
      runs_on:
        required: false
        type: string
        default: ubuntu-latest
      timeout_minutes:
        required: false
        type: number
        default: 30
      args:
        required: false
        type: string
      python_version:
        required: false
        type: string
        default: "3.12"
    secrets:
      app_id:
        required: true
      app_private_key:
        required: true
    outputs:
      next_release_version:
        value: ${{ jobs.release.outputs.NEXT_RELEASE_VERSION }}
      verify_release_version:
        value: ${{ jobs.release.outputs.VERIFY_RELEASE_VERSION }}

jobs:
  release:
    name: release
    runs-on: "${{ inputs.runs_on }}"
    outputs:
      NEXT_RELEASE_VERSION: ${{ steps.semantic.outputs.NEXT_RELEASE_VERSION }}
      VERIFY_RELEASE_VERSION: ${{ steps.semantic.outputs.VERIFY_RELEASE_VERSION }}
    steps:
      - name: Generate a token
        id: generate-token
        uses: getsentry/action-github-app-token@v2
        with:
          app_id: ${{ secrets.app_id }}
          private_key: ${{ secrets.app_private_key }}

      - name: Install git
        run: sudo apt update && sudo apt install -y git

      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Setup git to use https
        run: |
            git config --global credential.helper store
            echo "https://${{ steps.generate-token.outputs.token }}@github.com" > ~/.git-credentials
            git config --global url."https://x-access-token:${{ steps.generate-token.outputs.token }}@github.com".insteadOf ssh://github.com

      - name: Set up Python environment
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python_version }}

      - name: Install toml-cli
        run: pip install toml-cli

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.11.1

      - name: Setup npm with corepack
        run: |
          corepack enable
          corepack prepare npm@10.9.2 --activate 

      - name: Install dependencies
        run: npm install --save-dev semver@7.6.3 semantic-release@23.0.2 @semantic-release/changelog@6.0.3 @semantic-release/git@10.0.1 conventional-changelog-conventionalcommits@7.0.2 conventional-changelog-eslint@5.0.0 @semantic-release/exec@6.0.3 --legacy-peer-deps

      - name: Verify the integrity of provenance attestations and registry signatures for installed dependencies
        run: corepack npm audit signatures

      - name: Semantic release
        id: semantic
        env:
          GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
        run: npx semantic-release ${{ inputs.args }}
