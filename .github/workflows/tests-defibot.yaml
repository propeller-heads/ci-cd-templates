name: Test code use PyTest

on:
  workflow_call:
    inputs:
      runs_on:
        required: false
        type: string
        default: ubuntu-latest
      timeout_minutes:
        required: false
        type: number
        default: 15
      python_version:
        required: false
        type: string
        default: 3.9
      role_to_assume:
        required: false
        type: string
        default: arn:aws:iam::827659017777:role/github-actions
        description: ARN role to assume
      aws_region:
        required: false
        type: string
        default: eu-central-1
        description: Default AWS region

env:
  PYTEST_ADDOPTS: "--color=yes"

jobs:
  test-python:
    runs-on: "${{ inputs.runs_on }}"
    timeout-minutes: "${{ inputs.timeout_minutes }}"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python environment
        uses: actions/setup-python@v5
        with:
          python-version: "${{ inputs.python_version }}"
        id: setup_python

      - name: Cache Env
        uses: actions/cache@v4
        id: env-cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-${{ hashFiles('./requirements/requirements_dev.txt') }}-${{ hashFiles('./requirements/requirements_data.txt') }}-${{ hashFiles('./requirements/requirements_api.txt') }}-${{ hashFiles('./requirements/requirements.txt') }}-${{ hashFiles('./requirements/requirements_internal.txt') }}

      - name: Assume role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: "${{ inputs.role_to_assume }}"
          audience: sts.amazonaws.com
          aws-region: "${{ inputs.aws_region }}"

      - name: Install Dependencies
        if: ${{ steps.env-cache.outputs.cache-hit != 'true' }}
        run: |
          aws codeartifact login --tool pip --domain propeller --domain-owner 827659017777 --repository protosim
          python -m pip install --upgrade pip
          pip install -r requirements/requirements_dev.txt
          pip install -r requirements/requirements_data.txt
          pip install -r requirements/requirements_api.txt
          pip install -r requirements/requirements.txt
          pip install -r requirements/requirements_internal.txt
          npm install -g ganache-cli
        shell: bash

      - name: Test with pytest
        id: tests
        run: |
          bash ./scripts/download-test-assets.sh
          pytest --disable-warnings ./defibot
