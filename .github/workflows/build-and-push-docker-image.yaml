name: Build and push docker image

on:
  workflow_call:
    inputs:
      runs_on:
        required: false
        type: string
        default: ubuntu-latest
        description: Runner tag for workflow
      timeout_minutes:
        required: false
        type: number
        default: 30
        description: Timeout for workflow
      role_to_assume:
        required: false
        type: string
        default: arn:aws:iam::827659017777:role/github-actions
        description: ARN role to assume
      aws_region:
        required: false
        type: string
        default: eu-central-1
        description: Default AWS region
      image_tag:
        required: true
        type: string
        description: Image tag for docker artifact
      image_name:
        required: true
        type: string
        description: Image name
      cache:
        required: false
        type: boolean
        default: true
        description: Enable or disable cache for kaniko
      repository_url:
        required: false
        type: string
        default: 827659017777.dkr.ecr.eu-central-1.amazonaws.com
        description: Repository URL
      build_args:
        required: false
        type: string
        description: Build args
      tycho_client_version:
        type: string
        default: 'tycho-client-x86_64-unknown-linux-gnu-0.7.1.tar.gz'
        required: false

jobs:
  build-and-push:
    runs-on: "${{ inputs.runs_on }}"
    timeout-minutes: "${{ inputs.timeout_minutes }}"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Assume role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: "${{ inputs.role_to_assume }}"
          audience: sts.amazonaws.com
          aws-region: "${{ inputs.aws_region }}"

      - name: Login in ECR
        uses: aws-actions/amazon-ecr-login@v2
        id: ecr

      - name: Download Tycho-client from S3
        if: "${{ inputs.image_name == 'defibot' }}"
        run: |
            # Ensure the manifest file is empty or create it if it doesn't exist
            MANIFEST_FILE="manifest.txt"
            echo -n "" > "$MANIFEST_FILE"
            # Determine the tycho_client_version to use
            echo "Using tycho_client_version: ${{ inputs.tycho_client_version }}"
            FILE=${{ inputs.tycho_client_version }}
            echo "Tycho-client binary: $FILE"
            aws s3 cp s3://repo.propellerheads/tycho-client/$FILE ./
            tar -xzf $FILE
            EXTRACTED_NAME=$(tar -tzf $FILE | grep tycho-client | head -n 1)
            mv $EXTRACTED_NAME ./defibot/tycho/bins/tycho-client-linux-x64
            echo "$FILE" > "$MANIFEST_FILE"
            rm $FILE

      - name: Login in pip codeartifact
        if: "${{ inputs.image_name == 'defibot' }}"
        run: |
          CODEARTIFACT_AUTH_TOKEN=$(aws codeartifact get-authorization-token --domain propeller --domain-owner 827659017777 --query authorizationToken --output text --duration 1800)
          echo PIP_INDEX_URL="https://aws:${CODEARTIFACT_AUTH_TOKEN}@propeller-827659017777.d.codeartifact.eu-central-1.amazonaws.com/pypi/protosim/simple/" >> $GITHUB_ENV

      - name: Build and push docker image
        uses: int128/kaniko-action@v1
        with:
          push: true
          tags: "${{ inputs.repository_url }}/${{ inputs.image_name }}:${{ inputs.image_tag }}"
          cache: "${{ inputs.cache }}"
          cache-repository: "${{ inputs.repository_url }}/${{ inputs.image_name }}"
          build-args: PIP_INDEX_URL=${{ env.PIP_INDEX_URL }}
