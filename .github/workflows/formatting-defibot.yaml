name: Formatting python

on:
  workflow_call:
    inputs:
      runs_on:
        required: false
        type: string
        default: ubuntu-latest
      timeout_minutes:
        required: false
        type: number
        default: 15
      python_version:
        required: false
        type: string
        default: 3.9
      black_options:
        required: false
        type: string
        default: "--check --skip-magic-trailing-comma"
      black_src:
        required: false
        type: string
      black_version:
        required: false
        type: string
      black_jupyter:
        required: false
        type: string
        default: false
      black_summary:
        required: false
        type: string
        default: false
      black_use_pyproject:
        required: false
        type: string
        default: true

jobs:
  formatting-python:
    runs-on: "${{ inputs.runs_on }}"
    timeout-minutes: "${{ inputs.timeout_minutes }}"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache Env
        uses: actions/cache@v3
        id: env-cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-${{ hashFiles('./requirements/requirements_dev.txt') }}-${{ hashFiles('./requirements/requirements_data.txt') }}-${{ hashFiles('./requirements/requirements_api.txt') }}-${{ hashFiles('./requirements/requirements.txt') }}-${{ hashFiles('./requirements/requirements_internal.txt') }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4.0.1
        with:
          role-to-assume: arn:aws:iam::827659017777:role/github-actions
          audience: sts.amazonaws.com
          aws-region: eu-central-1

      - name: Install Dependencies
        if: ${{ steps.env-cache.outputs.cache-hit != 'true' }}
        run: |
          aws codeartifact login --tool pip --domain propeller --domain-owner 827659017777 --repository protosim
          python -m pip install --upgrade pip
          pip install -r requirements/requirements_dev.txt
          pip install -r requirements/requirements_data.txt
          pip install -r requirements/requirements_api.txt
          pip install -r requirements/requirements.txt
          pip install -r requirements/requirements_internal.txt
        shell: bash

      - name: Black Formatting
        run: |
          black ./defibot --check --skip-magic-trailing-comma

      - name: Documentation Check
        run: |
          interrogate
