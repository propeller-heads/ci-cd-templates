name: Deployment dev

on:
  workflow_call:
    inputs:
      runs_on:
        required: false
        type: string
        default: ubuntu-latest
        description: Runner tag for workflow
      timeout_minutes:
        required: false
        type: number
        default: 30
        description: Timeout for workflow
      image_tag:
        required: true
        type: string
        description: Image tag for docker artifact
      image_name:
        required: true
        type: string
        description: Image name for docker artifact
      app_name:
        required: false
        type: string
        description: Application name
    secrets:
      app_id:
        required: true
      app_private_key:
        required: true
      role_to_assume:
        required: true
      aws_region:
        required: true
      eks_cluster_name:
        required: true
      repository_url:
        required: true

jobs:
  deploy:
    runs-on: "${{ inputs.runs_on }}"
    steps:
      - name: Generate a token
        id: generate-token
        uses: getsentry/action-github-app-token@v2
        with:
          app_id: ${{ secrets.app_id }}
          private_key: ${{ secrets.app_private_key }}

      - name: Checkout helmwave values
        uses: actions/checkout@v4
        with:
          repository: propeller-heads/helm-configuration
          ref: main
          token: ${{ steps.generate-token.outputs.token }}
          path: ./tmp/

      - name: Install-aws-cli
        uses: unfor19/install-aws-cli-action@v1
        with:
          version: 2
          verbose: false
          arch: amd64
          rootdir: ""
          workdir: ""

      - name: Assume role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: "${{ secrets.role_to_assume }}"
          audience: sts.amazonaws.com
          aws-region: "${{ secrets.aws_region }}"

      - name: Setup kubeconfig
        run: aws eks update-kubeconfig --name "${{ secrets.eks_cluster_name }}" --region "${{ secrets.aws_region }}"

      - name: Install helmwave
        uses: helmwave/setup-action@v0.3.0
        with:
          version: 0.37.1

      - name: Deploy app uses helmwave
        run: |
          cd ./tmp/helmwave/dev
          helmwave yml
          helmwave up --build
        env:
          REPOSITORY_URL: "${{ secrets.repository_url }}/${{ inputs.image_name }}"
          IMAGE_TAG: ${{ inputs.image_tag }}
          HELMWAVE_TAGS: ${{ inputs.app_name }}
          HELMWAVE_KUBEDOG_ENABLED: true
